bool condition(int time,int k, vector<int> &boards) {
    int painters = 1;
    int curr_time =0;
    for(int i=0;i<boards.size();i++) {
        curr_time+=boards[i];
        if(curr_time>time) {
            painters++;
            curr_time = boards[i];
        }
    }
    if(painters>k) return false;
    return true;

}
int maximum_arr(vector<int>& boards) {
    int max_val = boards[0];
    for(int i=1;i<boards.size();i++) {
        max_val = max(max_val, boards[i]);
    }
    return max_val;
}
int sum_arr(vector<int>& boards) {
    int sum =0;
    for(int i=0;i<boards.size();i++) {
        sum+=boards[i];
    }
    return sum;
}
int findLargestMinDistance(vector<int> &boards, int k)
{
    int l = maximum_arr(boards); // maximum of all the numbers present in array
    int r = sum_arr(boards); // sum of the array
    int ans = -1;
    while(l<=r) {
        int mid = l + (r-l)/2;
        if(condition(mid,k,boards)==true) {
            r = mid-1;
            ans = mid;
        }
        else {
            l = mid+1;
        }
    }
    return ans;
}
